basePath: /
definitions:
  domain.ChabanDelmasBridgeJobResult:
    properties:
      close_time:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      job_id:
        type: integer
      open_time:
        type: string
      updated_at:
        type: string
    type: object
  domain.Job:
    properties:
      bridge_status:
        items:
          $ref: '#/definitions/domain.ChabanDelmasBridgeJobResult'
        type: array
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        $ref: '#/definitions/domain.JobStatus'
      task_type:
        $ref: '#/definitions/domain.JobTaskType'
      updated_at:
        type: string
      weather:
        $ref: '#/definitions/domain.WeatherJobResult'
    type: object
  domain.JobStatus:
    enum:
    - ""
    - pending
    - in_progress
    - completed
    - failed
    type: string
    x-enum-varnames:
    - JobStatus_Unknown
    - JobStatus_Pending
    - JobStatus_InProgress
    - JobStatus_Completed
    - JobStatus_Failed
  domain.JobTaskType:
    enum:
    - ""
    - get_weather
    - get_chaban_delmas_bridge_status
    type: string
    x-enum-varnames:
    - JobTaskType_Unknown
    - JobTaskType_Weather
    - JobTaskType_GetChabanDelmasBridgeStatus
  domain.WeatherJobResult:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      jobID:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      relativeHumidity:
        type: number
      temperature:
        type: number
      updatedAt:
        type: string
      weatherWmoCode:
        type: integer
    type: object
  dtos.ApiError:
    properties:
      error:
        type: string
      fields:
        additionalProperties:
          $ref: '#/definitions/validator.FieldError'
        type: object
    type: object
  dtos.CreateJobRequest:
    properties:
      name:
        maxLength: 255
        type: string
      slackWebhook:
        type: string
      taskType:
        $ref: '#/definitions/dtos.TaskType'
    required:
    - name
    - taskType
    type: object
  dtos.JobResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      slackWebhook:
        example: https://hooks.slack.com/services/...
        type: string
      status:
        $ref: '#/definitions/dtos.Status'
      taskType:
        $ref: '#/definitions/dtos.TaskType'
      updatedAt:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  dtos.Status:
    enum:
    - ""
    - pending
    - in_progress
    - completed
    - failed
    type: string
    x-enum-varnames:
    - JobStatus_Unknown
    - JobStatus_Pending
    - JobStatus_InProgress
    - JobStatus_Completed
    - JobStatus_Failed
  dtos.TaskType:
    enum:
    - ""
    - get_weather
    - get_chaban_delmas_bridge_status
    type: string
    x-enum-varnames:
    - JobTaskType_Unknown
    - JobTaskType_Weather
    - JobTaskType_GetChabanDelmasBridgeStatus
  dtos.UpdateJobRequest:
    properties:
      name:
        description: 'in: body'
        maxLength: 255
        type: string
      status:
        $ref: '#/definitions/dtos.Status'
      taskType:
        $ref: '#/definitions/dtos.TaskType'
    required:
    - name
    - status
    - taskType
    type: object
  validator.FieldError:
    properties:
      error:
        type: string
      field:
        type: string
      tag:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: BenjaminB64
  description: This service provides a RESTful API for managing jobs that can be executed
    asynchronously
  title: Jobs API Service
  version: "1.0"
paths:
  /jobs:
    get:
      description: Get jobs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.JobResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ApiError'
      summary: Get jobs
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Create a job
      parameters:
      - description: Create Job Request
        in: body
        name: createJobRequest
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateJobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Job'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ApiError'
      summary: Create a job
      tags:
      - jobs
  /jobs/{id}:
    delete:
      description: Delete a job by ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ApiError'
      summary: Delete a job by ID
      tags:
      - jobs
    get:
      description: Get a job by ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.JobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ApiError'
      summary: Get a job by ID
      tags:
      - jobs
    put:
      consumes:
      - application/json
      description: Update a job by ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Job Request
        in: body
        name: updateJobRequest
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateJobRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ApiError'
      summary: Update a job by ID
      tags:
      - jobs
swagger: "2.0"
